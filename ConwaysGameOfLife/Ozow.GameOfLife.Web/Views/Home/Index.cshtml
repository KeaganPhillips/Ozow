@{
    ViewData["Title"] = "Home Page";
}

<h1>Game Inputs</h1>
<div class='container-fluid'>
    <div class="col-md-4" >
        <div class="form-group">
            <label >Rows</label>
            <input class="form-control" id="rows" placeholder="Row count" value="10" />
            <small class="form-text text-muted">Number of rows in the grid</small>    
        </div>
        <div class="form-group">
            <label >Columns</label>
            <input class="form-control" id="cols" placeholder="Column count" value="10" />
            <small class="form-text text-muted">Number of columns in the grid</small>    
        </div>
        <div class="form-group">
            <label >Generations</label>
            <input class="form-control" id="gens" placeholder="Generations" value="15" />
            <small class="form-text text-muted">Number of generations</small>    
        </div>  
        <button type="button" id='btnStartGame' class="btn btn-primary">Start Game</button>
    </div>
    <div class="col-md-8" >
        <div id="grid" style="boder: 1px solid #333"></div>
    </div>
</div>

@section Scripts
{
  <script src="~/lib/signalr/dist/browser/signalr.js"></script>
  <script>
        function getGridData() {
            var data = new Array();
            var xpos = 1; //starting xpos and ypos at 1 so the stroke will show when we make the grid below
            var ypos = 1;
            var width = 35;
            var height = 35;

            // iterate for rows 
            for (var row = 0; row < 10; row++) {
                data.push( new Array() );

                // iterate for cells/columns inside rows
                for (var column = 0; column < 10; column++) {
                    data[row].push({
                        x: xpos,
                        y: ypos,
                        width: width,
                        height: height
                    })
                    // increment the x position. I.e. move it over by 50 (width variable)
                    xpos += width;
                }
                // reset the x position after a row is complete
                xpos = 1;
                // increment the y position for the next row. Move it down 50 (height variable)
                ypos += height; 
            }
            return data;
        }

        function createGrind() {
            var gridData = getGridData();                

            // Create Grid
            var grid = d3.select("#grid")
                .append("svg")
                .attr("width","500px")
                .attr("height","500px");

            // Add rows
            var row = grid.selectAll(".row")
                .data(gridData)
                .enter().append("g")
                .attr("class", "row");

            // Add cells
            var column = row.selectAll(".square")
                .data(function(d) { return d; })
                .enter().append("rect")
                .attr("class","square")
                .attr("x", function(d) { return d.x; })
                .attr("y", function(d) { return d.y; })
                .attr("width", function(d) { return d.width; })
                .attr("height", function(d) { return d.height; })
                .style("fill", "#fff")
                .style("stroke", "#222");
        }

        function handleSigErr(err) {
            return console.error(err.toString());
        };

        function handleStartGameMsgReceived(user, message) {            
        }

        function handleOnClickStartGame(){             
            $(this).prop('disabled', true);

            var connection = new signalR.HubConnectionBuilder().withUrl("/gameHub").build()
            connection.on("StartGameMsgReceived", handleStartGameMsgReceived);

            connection.start()
                .then(function(){                              
                    var message = {
                        RowCount: $('#rows').val(),
                        ColumnCount: $('#cols').val(),
                        GenCount: $('#gens').val()
                    };
                    connection.invoke("StartGame", message).catch(handleSigErr);                
                })
                .catch(handleSigErr);
        }

        $(function(){
            createGrind();
            $('#btnStartGame').click(handleOnClickStartGame);
        });

  </script>
}
